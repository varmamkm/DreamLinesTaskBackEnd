// <auto-generated />
using DL.API;
using DL.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DL.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DL.Entities.CabinType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ShipId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("CabinTypes");

                    b.HasData(
                        new { Id = 119375, ShipId = 119075, Title = "Balcony Cabin: Fantastica B2" },
                        new { Id = 119395, ShipId = 119075, Title = "Suite: Aurea S3" },
                        new { Id = 843466, ShipId = 119075, Title = "Suite: Aurea SP3" },
                        new { Id = 119538, ShipId = 119463, Title = "Suite: Executive and Family YC2" },
                        new { Id = 119542, ShipId = 119463, Title = "Balcony Cabin: Aurea B3" }
                    );
                });

            modelBuilder.Entity("DL.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new { Id = 119055, Title = "MSC Cruises" },
                        new { Id = 131168, Title = "Celebrity Cruises" },
                        new { Id = 93195, Title = "Royal Caribbean" }
                    );
                });

            modelBuilder.Entity("DL.Entities.Port", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<string>("CountryCode");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Ports");

                    b.HasData(
                        new { Id = 868857, Country = "Norway", CountryCode = "NO", Title = "Sandefjord, Norway" },
                        new { Id = 332439, Country = "France", CountryCode = "FR", Title = "St. Florent, Corsica, France" },
                        new { Id = 15118272, Country = "Maldives", CountryCode = "MV", Title = "Ari Atoll, Maldives" }
                    );
                });

            modelBuilder.Entity("DL.Entities.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Ships");

                    b.HasData(
                        new { Id = 119075, CompanyId = 119055, Title = "MSC Fantasia" },
                        new { Id = 119463, CompanyId = 119055, Title = "MSC Splendida" }
                    );
                });

            modelBuilder.Entity("DL.Entities.CabinType", b =>
                {
                    b.HasOne("DL.Entities.Ship", "Ship")
                        .WithMany("CabinTypes")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
